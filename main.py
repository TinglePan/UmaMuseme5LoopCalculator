import itertools
import time
from collections import OrderedDict

uma_info_dict = OrderedDict([
    ('アイネスフウジン', (
        [0, 17, 23, 14, 21, 17, 20, 24, 17, 17, 20, 24, 23, 25, 8, 21, 23, 10, 26, 22, 20, 19, 25, 28, 13, 13, 10, 18,
         14,
         19, 19, 15, 15, 18, 27, 16, 27, 19, 17, 20, 15, 17, 23, 21, 27, 17, 19, 15, 18, 19, 20, 19, 21, 18, 18, 1, 17,
         9,
         20, 10, 19, 14, 20, 16, 10, 17, 23, 26, 11, 16, 19, 37, 16, 18, 24, 29, 12, 19, 29, 19, 18, 24, 19, 16],
        '芝', 'マ中', '逃')),
    ('アグネスタキオン', (
        [17, 0, 22, 10, 20, 16, 24, 26, 18, 24, 24, 16, 24, 18, 10, 24, 20, 19, 24, 11, 15, 18, 20, 20, 11, 16, 19, 16,
         3,
         23, 18, 18, 18, 25, 12, 18, 17, 16, 11, 17, 18, 20, 12, 17, 17, 20, 21, 20, 26, 26, 20, 20, 27, 12, 30, 3, 18,
         10,
         15, 18, 17, 20, 14, 10, 19, 27, 17, 11, 22, 25, 17, 23, 19, 16, 26, 17, 23, 19, 24, 21, 9, 15, 18, 12],
        '芝', '中', '差')),
    ('アグネスデジタル', (
        [23, 22, 0, 12, 19, 28, 18, 34, 26, 22, 22, 33, 30, 18, 20, 24, 21, 13, 25, 32, 25, 22, 21, 33, 15, 12, 14, 27,
         26,
         18, 26, 20, 20, 20, 32, 28, 16, 30, 28, 19, 21, 19, 28, 37, 21, 27, 28, 28, 19, 19, 18, 28, 22, 26, 18, 21, 23,
         19,
         17, 13, 25, 26, 27, 38, 15, 19, 18, 20, 11, 23, 18, 26, 26, 23, 25, 19, 13, 27, 15, 28, 29, 32, 25, 35],
        '芝ダ', 'マ中', '先')),
    ('アストンマーチャン', (
        [14, 10, 12, 0, 10, 8, 10, 17, 11, 9, 10, 9, 10, 17, 23, 12, 19, 19, 8, 12, 9, 11, 16, 9, 18, 7, 10, 9, 0, 8,
         10,
         20, 10, 9, 14, 10, 14, 10, 19, 9, 10, 22, 12, 18, 18, 10, 15, 10, 9, 9, 9, 11, 10, 21, 9, 12, 20, 19, 9, 12,
         10,
         11, 10, 2, 10, 9, 17, 23, 9, 11, 8, 24, 10, 8, 9, 17, 9, 14, 7, 11, 19, 12, 10, 3],
        '芝', '短', '逃')),
    ('アドマイヤベガ', (
        [21, 20, 19, 10, 0, 22, 25, 18, 20, 27, 23, 16, 19, 19, 14, 16, 19, 11, 16, 11, 14, 29, 18, 19, 9, 12, 12, 17,
         7,
         17, 19, 9, 24, 20, 12, 19, 17, 18, 9, 29, 24, 9, 12, 16, 16, 23, 20, 17, 19, 16, 32, 24, 22, 10, 20, 20, 12,
         11,
         26, 13, 24, 17, 13, 11, 12, 20, 19, 10, 11, 18, 25, 20, 22, 18, 16, 21, 15, 19, 20, 21, 8, 16, 17, 12],
        '芝', '中', '追')),
    ('イナリワン', (
        [17, 16, 28, 8, 22, 0, 16, 17, 17, 24, 18, 18, 26, 20, 7, 15, 27, 10, 20, 20, 11, 35, 17, 19, 10, 21, 18, 21,
         12,
         20, 31, 10, 25, 26, 20, 33, 25, 20, 11, 23, 43, 8, 10, 18, 23, 27, 19, 19, 25, 19, 23, 25, 26, 8, 17, 17, 13,
         10,
         24, 21, 26, 15, 9, 20, 21, 18, 27, 12, 19, 19, 26, 16, 18, 23, 19, 27, 19, 26, 19, 19, 12, 18, 29, 18],
        '芝ダ', '中長', '追')),
    ('ウイニングチケット', (
        [20, 24, 18, 10, 25, 16, 0, 25, 22, 20, 31, 16, 29, 21, 11, 23, 21, 19, 22, 12, 12, 26, 20, 18, 10, 20, 21, 17,
         6,
         25, 20, 16, 18, 31, 13, 20, 18, 19, 9, 22, 18, 17, 13, 18, 17, 21, 21, 20, 26, 24, 28, 24, 32, 9, 27, 3, 20,
         12,
         20, 22, 30, 16, 13, 11, 19, 26, 21, 10, 17, 27, 20, 19, 20, 18, 21, 23, 20, 22, 26, 22, 8, 19, 20, 12],
        '芝', 'マ中', '差')),
    ('ウオッカ', (
        [24, 26, 34, 17, 18, 17, 25, 0, 22, 19, 29, 26, 33, 19, 14, 34, 20, 20, 31, 19, 19, 22, 21, 25, 8, 17, 19, 20,
         9,
         24, 20, 29, 21, 29, 24, 18, 16, 21, 19, 20, 19, 28, 20, 39, 21, 19, 27, 20, 26, 25, 17, 21, 29, 23, 24, 4, 28,
         9,
         19, 19, 17, 19, 20, 20, 20, 24, 18, 17, 16, 26, 19, 27, 17, 15, 34, 18, 20, 24, 22, 20, 20, 25, 17, 18],
        '芝', 'マ中', '差')),
    ('エアグルーヴ', (
        [17, 18, 26, 11, 20, 17, 22, 22, 0, 18, 21, 25, 17, 21, 17, 20, 22, 13, 18, 11, 18, 21, 18, 23, 17, 10, 12, 22,
         14,
         19, 29, 13, 19, 20, 14, 28, 17, 24, 18, 18, 20, 13, 21, 30, 16, 28, 29, 28, 19, 17, 21, 31, 24, 20, 18, 3, 13,
         16,
         20, 15, 29, 27, 22, 16, 12, 18, 18, 11, 7, 19, 19, 18, 25, 22, 20, 20, 13, 28, 18, 32, 16, 24, 24, 16],
        '芝', '中', '先')),
    ('エアシャカール', (
        [17, 24, 22, 9, 27, 24, 20, 19, 18, 0, 23, 17, 19, 21, 13, 16, 21, 12, 16, 10, 16, 32, 23, 20, 11, 13, 17, 17,
         3,
         16, 23, 11, 25, 22, 12, 22, 20, 22, 12, 26, 26, 11, 11, 17, 17, 24, 22, 22, 21, 20, 28, 21, 21, 9, 26, 20, 11,
         12,
         23, 13, 22, 19, 11, 13, 14, 24, 21, 9, 18, 21, 28, 21, 24, 18, 18, 20, 17, 22, 19, 22, 8, 15, 21, 13],
        '芝', '中', '追')),
    ('エイシンフラッシュ', (
        [20, 24, 22, 10, 23, 18, 31, 29, 21, 23, 0, 18, 28, 21, 15, 23, 23, 19, 22, 13, 13, 30, 20, 18, 9, 23, 24, 20,
         4,
         26, 22, 18, 19, 30, 20, 22, 18, 24, 11, 22, 20, 16, 13, 18, 18, 23, 21, 22, 28, 27, 22, 22, 31, 9, 28, 4, 21,
         11,
         21, 23, 24, 17, 14, 14, 21, 28, 21, 9, 19, 27, 21, 19, 21, 18, 22, 24, 22, 20, 27, 24, 9, 16, 20, 14],
        '芝', '中', '差')),
    ('エルコンドルパサー', (
        [24, 16, 33, 9, 16, 18, 16, 26, 25, 17, 18, 0, 24, 16, 17, 24, 19, 16, 38, 21, 22, 19, 20, 34, 17, 12, 11, 29,
         19,
         18, 31, 20, 15, 25, 20, 23, 25, 28, 32, 16, 16, 16, 24, 31, 17, 28, 24, 23, 17, 21, 15, 23, 19, 23, 15, 2, 17,
         17,
         20, 10, 23, 24, 26, 27, 12, 16, 16, 20, 13, 15, 16, 23, 25, 25, 26, 16, 9, 22, 17, 24, 26, 31, 26, 24],
        '芝', 'マ中', '先')),
    ('オグリキャップ', (
        [23, 24, 30, 10, 19, 26, 29, 33, 17, 19, 28, 24, 0, 21, 12, 30, 20, 19, 31, 21, 20, 23, 21, 26, 9, 18, 20, 19,
         13,
         24, 20, 26, 19, 28, 20, 29, 17, 20, 19, 19, 28, 25, 20, 26, 19, 22, 19, 18, 27, 22, 18, 18, 29, 17, 25, 13, 29,
         13,
         18, 19, 20, 18, 18, 21, 20, 25, 21, 19, 18, 26, 20, 24, 21, 25, 30, 21, 20, 21, 25, 21, 17, 25, 19, 22],
        '芝', 'マ中', '差')),
    ('カツラギエース', (
        [25, 18, 18, 17, 19, 20, 21, 19, 21, 21, 21, 16, 21, 0, 11, 16, 29, 13, 16, 17, 15, 22, 26, 17, 10, 10, 14, 20,
         4,
         16, 24, 12, 19, 22, 18, 24, 26, 20, 8, 19, 23, 10, 13, 18, 25, 24, 23, 20, 22, 18, 20, 20, 19, 10, 21, 11, 11,
         11,
         16, 13, 23, 16, 11, 11, 14, 20, 28, 20, 9, 22, 26, 26, 22, 20, 16, 31, 16, 23, 21, 23, 8, 15, 18, 11],
        '芝', '中', '逃')),
    ('カレンチャン', (
        [8, 10, 20, 23, 14, 7, 11, 14, 17, 13, 15, 17, 12, 11, 0, 10, 10, 19, 7, 3, 17, 13, 13, 14, 26, 10, 12, 17, 8,
         7,
         17, 21, 11, 11, 6, 17, 9, 21, 28, 10, 9, 21, 18, 19, 10, 18, 18, 17, 10, 10, 11, 16, 10, 28, 11, 21, 19, 27,
         10,
         11, 18, 17, 17, 12, 9, 10, 11, 14, 12, 13, 9, 16, 18, 16, 8, 12, 10, 19, 8, 16, 27, 22, 16, 12],
        '芝', '短', '先')),
    ('カワカミプリンセス', (
        [21, 24, 24, 12, 16, 15, 23, 34, 20, 16, 23, 24, 30, 16, 10, 0, 18, 19, 31, 22, 16, 17, 16, 22, 7, 14, 17, 15,
         7,
         22, 16, 27, 19, 25, 19, 16, 16, 14, 15, 16, 17, 25, 17, 29, 14, 18, 18, 17, 25, 23, 18, 17, 24, 20, 23, 13, 24,
         13,
         15, 17, 16, 19, 17, 20, 19, 23, 16, 15, 14, 23, 14, 24, 18, 14, 33, 16, 16, 17, 21, 17, 16, 23, 15, 16],
        '芝', 'マ中', '差')),
    ('キタサンブラック', (
        [23, 20, 21, 19, 19, 27, 21, 20, 22, 21, 23, 19, 20, 29, 10, 18, 0, 14, 17, 19, 12, 31, 24, 18, 9, 18, 33, 18,
         1,
         19, 32, 11, 22, 30, 18, 31, 32, 22, 10, 18, 30, 10, 12, 20, 24, 32, 27, 22, 26, 17, 19, 28, 29, 12, 20, 3, 12,
         11,
         16, 23, 32, 17, 11, 11, 21, 20, 39, 17, 19, 20, 20, 26, 20, 17, 16, 35, 21, 30, 17, 24, 10, 16, 29, 11],
        '芝', '中長', '逃')),
    ('キングヘイロー', (
        [10, 19, 13, 19, 11, 10, 19, 20, 13, 12, 19, 16, 19, 13, 19, 19, 14, 0, 24, 8, 12, 13, 12, 11, 18, 16, 22, 10,
         4,
         17, 12, 29, 11, 26, 9, 11, 18, 10, 20, 12, 12, 30, 16, 13, 10, 14, 15, 12, 21, 19, 12, 14, 21, 22, 18, 23, 29,
         21,
         9, 19, 12, 13, 13, 6, 23, 19, 11, 17, 15, 18, 12, 20, 13, 11, 17, 11, 21, 15, 17, 14, 20, 7, 11, 4],
        '芝', '短', '差')),
    ('グラスワンダー', (
        [26, 24, 25, 8, 16, 20, 22, 31, 18, 16, 22, 38, 31, 16, 7, 31, 17, 24, 0, 19, 16, 17, 19, 29, 10, 18, 16, 19,
         12,
         27, 21, 24, 16, 31, 17, 15, 25, 18, 22, 16, 17, 23, 17, 24, 17, 21, 17, 17, 24, 26, 16, 16, 29, 17, 22, 11, 24,
         11,
         20, 17, 16, 16, 21, 18, 19, 23, 18, 21, 18, 23, 16, 25, 18, 17, 34, 17, 17, 16, 25, 16, 19, 23, 18, 16],
        '芝', 'マ中', '差')),
    ('コパノリッキー', (
        [22, 11, 32, 12, 11, 20, 12, 19, 11, 10, 13, 21, 21, 17, 3, 22, 19, 8, 19, 0, 10, 13, 18, 18, 1, 1, 3, 13, 19,
         9,
         11, 12, 12, 12, 43, 11, 17, 9, 11, 11, 12, 11, 12, 19, 19, 13, 12, 13, 13, 10, 10, 12, 12, 11, 10, 15, 13, 10,
         9,
         6, 12, 11, 12, 41, 8, 11, 19, 18, 2, 10, 9, 25, 13, 9, 16, 19, 4, 11, 8, 12, 10, 17, 11, 35],
        'ダ', 'マ中', '逃')),
    ('ゴールドシチー', (
        [20, 15, 25, 9, 14, 11, 12, 19, 18, 16, 13, 22, 20, 15, 17, 16, 12, 12, 16, 10, 0, 13, 14, 27, 20, 9, 13, 15,
         17, 8,
         17, 18, 10, 14, 11, 20, 12, 19, 25, 12, 13, 22, 25, 23, 10, 20, 20, 22, 14, 14, 15, 19, 13, 27, 16, 3, 20, 18,
         10,
         11, 20, 18, 27, 18, 12, 15, 12, 16, 12, 13, 13, 22, 19, 17, 19, 13, 17, 20, 12, 21, 22, 23, 20, 22],
        '芝', 'マ', '先')),
    ('ゴールドシップ', (
        [19, 18, 22, 11, 29, 35, 26, 22, 21, 32, 30, 19, 23, 22, 13, 17, 31, 13, 17, 13, 13, 0, 25, 17, 9, 25, 25, 20,
         4,
         19, 33, 12, 28, 33, 18, 30, 27, 23, 11, 28, 36, 9, 13, 21, 19, 33, 25, 21, 28, 20, 30, 30, 35, 9, 21, 20, 14,
         12,
         28, 26, 35, 16, 14, 16, 21, 22, 32, 9, 22, 21, 28, 19, 22, 18, 15, 33, 23, 37, 21, 24, 8, 16, 31, 13],
        '芝', '中長', '追')),
    ('サイレンススズカ', (
        [25, 20, 21, 16, 18, 17, 20, 21, 18, 23, 20, 20, 21, 26, 13, 16, 24, 12, 19, 18, 14, 25, 0, 19, 11, 13, 13, 18,
         5,
         15, 18, 14, 20, 27, 22, 20, 24, 19, 17, 20, 19, 12, 13, 20, 25, 20, 20, 19, 19, 20, 18, 17, 21, 10, 22, 3, 12,
         11,
         17, 11, 19, 22, 12, 15, 13, 27, 26, 20, 14, 21, 17, 28, 20, 17, 23, 28, 18, 24, 18, 18, 10, 15, 19, 14],
        '芝', '中', '逃')),
    ('サクラチヨノオー', (
        [28, 20, 33, 9, 19, 19, 18, 25, 23, 20, 18, 34, 26, 17, 14, 22, 18, 11, 29, 18, 27, 17, 19, 0, 24, 13, 10, 27,
         18,
         18, 27, 17, 16, 18, 18, 24, 19, 26, 29, 18, 18, 19, 24, 31, 17, 23, 25, 27, 15, 22, 18, 24, 22, 24, 20, 1, 19,
         19,
         18, 9, 24, 25, 27, 24, 11, 19, 15, 20, 13, 16, 19, 31, 22, 29, 28, 16, 12, 22, 18, 27, 26, 31, 31, 25],
        '芝', 'マ中', '先')),
    ('サクラバクシンオー', (
        [13, 11, 15, 18, 9, 10, 10, 8, 17, 11, 9, 17, 9, 10, 26, 7, 9, 18, 10, 1, 20, 9, 11, 24, 0, 13, 9, 17, 14, 10,
         17,
         17, 8, 9, 4, 17, 12, 18, 29, 9, 9, 21, 20, 15, 13, 17, 17, 19, 12, 13, 9, 16, 8, 27, 11, 18, 18, 26, 10, 8, 17,
         16,
         16, 9, 11, 11, 9, 16, 13, 9, 10, 22, 17, 19, 12, 11, 13, 18, 14, 17, 27, 18, 23, 11],
        '芝', '短', '先')),
    ('サクラローレル', (
        [13, 16, 12, 7, 12, 21, 20, 17, 10, 13, 23, 12, 18, 10, 10, 14, 18, 16, 18, 1, 9, 25, 13, 13, 13, 0, 27, 12, 6,
         21,
         22, 16, 10, 27, 7, 20, 21, 16, 13, 12, 18, 14, 11, 10, 12, 19, 10, 9, 24, 19, 12, 18, 32, 7, 18, 1, 19, 10, 17,
         26,
         21, 7, 14, 5, 24, 17, 20, 10, 30, 20, 10, 8, 10, 12, 17, 20, 25, 18, 20, 12, 11, 11, 20, 2],
        '芝', '長', '差')),
    ('サトノダイヤモンド', (
        [10, 19, 14, 10, 12, 18, 21, 19, 12, 17, 24, 11, 20, 14, 12, 17, 33, 22, 16, 3, 13, 25, 13, 10, 9, 27, 0, 11, 2,
         18,
         23, 19, 16, 28, 5, 22, 19, 15, 10, 12, 20, 18, 11, 11, 11, 22, 15, 13, 27, 18, 13, 20, 28, 11, 20, 4, 18, 12,
         9,
         27, 23, 12, 10, 7, 27, 21, 24, 9, 27, 20, 13, 11, 13, 12, 15, 21, 28, 26, 18, 14, 8, 8, 19, 4],
        '芝', '長', '差')),
    ('シリウスシンボリ', (
        [18, 16, 27, 9, 17, 21, 17, 20, 22, 17, 20, 29, 19, 20, 17, 15, 18, 10, 19, 13, 15, 20, 18, 27, 17, 12, 11, 0,
         11,
         18, 35, 13, 16, 16, 14, 24, 17, 27, 22, 17, 18, 9, 17, 24, 18, 23, 25, 24, 16, 23, 16, 24, 18, 17, 16, 1, 11,
         15,
         19, 11, 23, 23, 17, 19, 11, 16, 16, 14, 13, 15, 22, 17, 23, 27, 18, 17, 9, 23, 17, 23, 20, 24, 27, 18],
        '芝', '中', '先')),
    ('シンコウウインディ', (
        [14, 3, 26, 0, 7, 12, 6, 9, 14, 3, 4, 19, 13, 4, 8, 7, 1, 4, 12, 19, 17, 4, 5, 18, 14, 6, 2, 11, 0, 5, 10, 10,
         2, 4,
         21, 9, 7, 12, 20, 5, 1, 10, 19, 15, 7, 9, 9, 8, 3, 4, 7, 13, 5, 17, 3, 10, 11, 11, 6, 3, 13, 8, 20, 26, 2, 3,
         2, 9,
         5, 3, 5, 9, 9, 11, 11, 5, 4, 10, 7, 11, 18, 20, 11, 26],
        'ダ', 'マ', '先')),
    ('シンボリクリスエス', (
        [19, 23, 18, 8, 17, 20, 25, 24, 19, 16, 26, 18, 24, 16, 7, 22, 19, 17, 27, 9, 8, 19, 15, 18, 10, 21, 18, 18, 5,
         0,
         20, 15, 16, 24, 11, 17, 18, 21, 11, 21, 18, 15, 12, 17, 18, 18, 18, 18, 23, 25, 17, 19, 27, 8, 23, 0, 21, 8,
         19,
         23, 18, 18, 11, 8, 17, 22, 18, 9, 18, 23, 17, 16, 16, 18, 24, 19, 16, 16, 26, 22, 12, 16, 19, 8],
        '芝', '中', '差')),
    ('シンボリルドルフ', (
        [19, 18, 26, 10, 19, 31, 20, 20, 29, 23, 22, 31, 20, 24, 17, 16, 32, 12, 21, 11, 17, 33, 18, 27, 17, 22, 23, 35,
         10,
         20, 0, 12, 15, 29, 12, 35, 28, 33, 24, 17, 29, 8, 17, 25, 19, 40, 31, 26, 24, 22, 19, 33, 34, 15, 20, 1, 10,
         15,
         20, 21, 36, 22, 19, 17, 19, 18, 28, 15, 24, 18, 26, 19, 25, 28, 18, 26, 19, 33, 19, 27, 18, 24, 39, 16],
        '芝', '中長', '先')),
    ('シーキングザパール', (
        [15, 18, 20, 20, 9, 10, 16, 29, 13, 11, 18, 20, 26, 12, 21, 27, 11, 29, 24, 12, 18, 12, 14, 17, 17, 16, 19, 13,
         10,
         15, 12, 0, 11, 17, 17, 12, 9, 9, 29, 10, 12, 36, 21, 20, 8, 9, 11, 10, 18, 19, 9, 11, 18, 29, 16, 12, 34, 18,
         9,
         17, 9, 13, 19, 12, 18, 18, 9, 26, 16, 16, 11, 25, 9, 9, 26, 9, 19, 10, 15, 12, 25, 15, 8, 10],
        '芝', '短マ', '差')),
    ('スイープトウショウ', (
        [15, 18, 20, 10, 24, 25, 18, 21, 19, 25, 19, 15, 19, 19, 11, 19, 22, 11, 16, 12, 10, 28, 20, 16, 8, 10, 16, 16,
         2,
         16, 15, 11, 0, 19, 12, 20, 16, 17, 8, 27, 26, 11, 11, 24, 17, 19, 17, 18, 19, 16, 24, 18, 19, 16, 19, 12, 13,
         10,
         26, 13, 19, 22, 10, 13, 13, 19, 23, 10, 8, 20, 24, 16, 19, 16, 20, 20, 12, 19, 16, 18, 9, 17, 16, 12],
        '芝', '中', '追')),
    ('スペシャルウィーク', (
        [18, 25, 20, 9, 20, 26, 31, 29, 20, 22, 30, 25, 28, 22, 11, 25, 30, 26, 31, 12, 14, 33, 27, 18, 9, 27, 28, 16,
         4,
         24, 29, 17, 19, 0, 10, 31, 34, 22, 9, 21, 29, 16, 11, 20, 17, 35, 25, 20, 37, 23, 20, 26, 37, 9, 30, 13, 19,
         13,
         16, 27, 29, 17, 11, 14, 31, 30, 28, 11, 25, 29, 21, 19, 23, 18, 25, 27, 31, 33, 26, 22, 10, 15, 28, 11],
        '芝', '中長', '差')),
    ('スマートファルコン', (
        [27, 12, 32, 14, 12, 20, 13, 24, 14, 12, 20, 20, 20, 18, 6, 19, 18, 9, 17, 43, 11, 18, 22, 18, 4, 7, 5, 14, 21,
         11,
         12, 17, 12, 10, 0, 11, 16, 10, 14, 13, 12, 14, 17, 20, 20, 10, 13, 13, 12, 13, 12, 16, 16, 14, 10, 23, 17, 8,
         12,
         7, 13, 11, 17, 37, 6, 11, 17, 20, 3, 10, 10, 28, 10, 8, 16, 20, 5, 12, 11, 15, 12, 16, 10, 32],
        'ダ', 'マ中', '逃')),
    ('スーパークリーク', (
        [16, 18, 28, 10, 19, 33, 20, 18, 28, 22, 22, 23, 29, 24, 17, 16, 31, 11, 15, 11, 20, 30, 20, 24, 17, 20, 22, 24,
         9,
         17, 35, 12, 20, 31, 11, 0, 26, 27, 16, 19, 38, 10, 18, 27, 17, 36, 27, 28, 27, 16, 22, 33, 28, 16, 22, 3, 14,
         19,
         16, 21, 37, 23, 18, 20, 20, 22, 29, 11, 19, 23, 23, 17, 27, 30, 16, 28, 21, 37, 17, 30, 18, 23, 34, 18],
        '芝', '中長', '先')),
    ('セイウンスカイ', (
        [27, 17, 16, 14, 17, 25, 18, 16, 17, 20, 18, 25, 17, 26, 9, 16, 32, 18, 25, 17, 12, 27, 24, 19, 12, 21, 19, 17,
         7,
         18, 28, 9, 16, 34, 16, 26, 0, 20, 11, 17, 23, 8, 10, 15, 27, 29, 19, 16, 28, 19, 18, 26, 26, 8, 18, 11, 9, 11,
         18,
         17, 26, 14, 9, 11, 20, 19, 32, 16, 19, 17, 21, 25, 20, 20, 18, 31, 21, 26, 21, 20, 11, 17, 27, 9],
        '芝', '中長', '逃')),
    ('ゼンノロブロイ', (
        [19, 16, 30, 10, 18, 20, 19, 21, 24, 22, 24, 28, 20, 20, 21, 14, 22, 10, 18, 9, 19, 23, 19, 26, 18, 16, 15, 27,
         12,
         21, 33, 9, 17, 22, 10, 27, 20, 0, 20, 18, 18, 7, 16, 25, 21, 31, 30, 25, 19, 20, 18, 24, 18, 14, 21, 9, 9, 16,
         19,
         12, 27, 23, 16, 18, 12, 19, 20, 9, 16, 23, 20, 16, 27, 28, 18, 20, 13, 28, 21, 27, 20, 27, 30, 17],
        '芝', '中', '先')),
    ('タイキシャトル', (
        [17, 11, 28, 19, 9, 11, 9, 19, 18, 12, 11, 32, 19, 8, 28, 15, 10, 20, 22, 11, 25, 11, 17, 29, 29, 13, 10, 22,
         20,
         11, 24, 29, 8, 9, 14, 16, 11, 20, 0, 9, 9, 29, 27, 23, 10, 19, 17, 18, 9, 15, 8, 16, 12, 33, 10, 17, 28, 25,
         13,
         10, 16, 21, 26, 18, 11, 15, 9, 27, 15, 8, 9, 25, 17, 19, 27, 9, 15, 16, 11, 17, 36, 24, 21, 19],
        '芝', '短マ', '先')),
    ('タニノギムレット', (
        [20, 17, 19, 9, 29, 23, 22, 20, 18, 26, 22, 16, 19, 19, 10, 16, 18, 12, 16, 11, 12, 28, 20, 18, 9, 12, 12, 17,
         5,
         21, 17, 10, 27, 21, 13, 19, 17, 18, 9, 0, 25, 10, 13, 18, 16, 19, 19, 17, 18, 16, 28, 20, 26, 10, 22, 10, 16,
         11,
         25, 16, 21, 19, 13, 13, 13, 20, 19, 10, 9, 19, 26, 19, 18, 16, 16, 20, 12, 18, 19, 22, 10, 15, 16, 12],
        '芝', '中', '追')),
    ('タマモクロス', (
        [15, 18, 21, 10, 24, 43, 18, 19, 20, 26, 20, 16, 28, 23, 9, 17, 30, 12, 17, 12, 13, 36, 19, 18, 9, 18, 20, 18,
         1,
         18, 29, 12, 26, 29, 12, 38, 23, 18, 9, 25, 0, 11, 12, 20, 16, 29, 21, 21, 26, 18, 25, 27, 27, 10, 19, 17, 14,
         10,
         22, 23, 28, 17, 11, 11, 21, 19, 28, 13, 16, 21, 28, 18, 20, 21, 17, 27, 20, 29, 17, 23, 11, 15, 26, 10],
        '芝', '中長', '追')),
    ('ダイイチルビー', (
        [17, 20, 19, 22, 9, 8, 17, 28, 13, 11, 16, 16, 25, 10, 21, 25, 10, 30, 23, 11, 22, 9, 12, 19, 21, 14, 18, 9, 10,
         15,
         8, 36, 11, 16, 14, 10, 8, 7, 29, 10, 11, 0, 26, 19, 10, 10, 12, 15, 19, 20, 9, 11, 18, 31, 18, 12, 36, 19, 9,
         17,
         10, 16, 20, 10, 20, 18, 9, 24, 16, 16, 10, 28, 10, 10, 27, 12, 20, 14, 18, 12, 29, 15, 11, 14],
        '芝', '短マ', '差')),
    ('ダイタクヘリオス', (
        [23, 12, 28, 12, 12, 10, 13, 20, 21, 11, 13, 24, 20, 13, 18, 17, 12, 16, 17, 12, 25, 13, 13, 24, 20, 11, 11, 17,
         19,
         12, 17, 21, 11, 11, 17, 18, 10, 16, 27, 13, 12, 26, 0, 26, 13, 18, 21, 19, 13, 10, 13, 22, 15, 29, 10, 4, 24,
         19,
         11, 14, 20, 18, 29, 18, 14, 10, 11, 17, 8, 11, 12, 20, 18, 17, 16, 21, 12, 21, 15, 22, 29, 22, 18, 18],
        '芝', 'マ', '先')),
    ('ダイワスカーレット', (
        [21, 17, 37, 18, 16, 18, 18, 39, 30, 17, 18, 31, 26, 18, 19, 29, 20, 13, 24, 19, 23, 21, 20, 31, 15, 10, 11, 24,
         15, 17, 25, 20, 24, 20, 20, 27, 15, 25, 23, 18, 20, 19, 26, 0, 20, 25, 34, 27, 17, 16, 16, 25, 21, 28, 18, 4,
         20, 17, 18, 11, 25, 28, 25, 26, 13, 17, 18, 18, 8, 21, 16, 24, 24, 22, 28, 18, 10, 32, 14, 27, 26, 32, 23, 24],
        '芝', 'マ中', '先')),
    ('ツインターボ', (
        [27, 17, 21, 18, 16, 23, 17, 21, 16, 17, 18, 17, 19, 25, 10, 14, 24, 10, 17, 19, 10, 19, 25, 17, 13, 12, 11, 18,
         7,
         18, 19, 8, 17, 17, 20, 17, 27, 21, 10, 16, 16, 10, 13, 20, 0, 17, 25, 17, 24, 19, 17, 18, 16, 10, 16, 5, 10,
         11,
         18, 10, 17, 14, 9, 12, 14, 17, 24, 15, 11, 19, 18, 24, 17, 20, 16, 28, 12, 24, 20, 17, 15, 22, 20, 12],
        '芝', '中', '逃')),
    ('テイエムオペラオー', (
        [17, 20, 27, 10, 23, 27, 21, 19, 28, 24, 23, 28, 22, 24, 18, 18, 32, 14, 21, 13, 20, 33, 20, 23, 17, 19, 22, 23,
         9,
         18, 40, 9, 19, 35, 10, 36, 29, 31, 19, 19, 29, 10, 18, 25, 17, 0, 30, 27, 29, 17, 22, 35, 31, 17, 22, 17, 11,
         20,
         19, 22, 40, 23, 20, 20, 22, 20, 32, 10, 21, 22, 22, 19, 35, 25, 15, 31, 22, 36, 19, 29, 16, 24, 35, 19],
        '芝', '中長', '先')),
    ('トウカイテイオー', (
        [19, 21, 28, 15, 20, 19, 21, 27, 29, 22, 21, 24, 19, 23, 18, 18, 27, 15, 17, 12, 20, 25, 20, 25, 17, 10, 15, 25,
         9,
         18, 31, 11, 17, 25, 13, 27, 19, 30, 17, 19, 21, 12, 21, 34, 25, 30, 0, 28, 23, 19, 21, 28, 24, 19, 23, 3, 12,
         17,
         15, 13, 28, 24, 20, 17, 15, 19, 22, 9, 10, 23, 21, 23, 26, 23, 16, 21, 14, 36, 19, 31, 20, 23, 28, 17],
        '芝', '中', '先')),
    ('トーセンジョーダン', (
        [15, 20, 28, 10, 17, 19, 20, 20, 28, 22, 22, 23, 18, 20, 17, 17, 22, 12, 17, 13, 22, 21, 19, 27, 19, 9, 13, 24,
         8,
         18, 26, 10, 18, 20, 13, 28, 16, 25, 18, 17, 21, 15, 19, 27, 17, 27, 28, 0, 20, 23, 18, 28, 19, 17, 20, 4, 13,
         18,
         15, 15, 26, 26, 18, 18, 14, 21, 19, 10, 10, 19, 19, 20, 26, 23, 18, 20, 15, 27, 16, 29, 17, 22, 28, 24],
        '芝', '中', '先')),
    ('ナイスネイチャ', (
        [18, 26, 19, 9, 19, 25, 26, 26, 19, 21, 28, 17, 27, 22, 10, 25, 26, 21, 24, 13, 14, 28, 19, 15, 12, 24, 27, 16,
         3,
         23, 24, 18, 19, 37, 12, 27, 28, 19, 9, 18, 26, 19, 13, 17, 24, 29, 23, 20, 0, 23, 20, 27, 33, 12, 27, 15, 19,
         13,
         16, 27, 27, 16, 12, 14, 35, 27, 27, 8, 24, 30, 20, 19, 22, 18, 22, 30, 29, 29, 26, 20, 10, 17, 27, 12],
        '芝', '中長', '差')),
    ('ナカヤマフェスタ', (
        [19, 26, 19, 9, 16, 19, 24, 25, 17, 20, 27, 21, 22, 18, 10, 23, 17, 19, 26, 10, 14, 20, 20, 22, 13, 19, 18, 23,
         4,
         25, 22, 19, 16, 23, 13, 16, 19, 20, 15, 16, 18, 20, 10, 16, 19, 17, 19, 23, 23, 0, 16, 18, 24, 9, 25, 1, 16, 9,
         16,
         17, 18, 17, 10, 11, 17, 25, 16, 10, 21, 23, 17, 20, 16, 17, 26, 16, 19, 18, 27, 19, 11, 16, 21, 14],
        '芝', '中', '差')),
    ('ナリタタイシン', (
        [20, 20, 18, 9, 32, 23, 28, 17, 21, 28, 22, 15, 18, 20, 11, 18, 19, 12, 16, 10, 15, 30, 18, 18, 9, 12, 13, 16,
         7,
         17, 19, 9, 24, 20, 12, 22, 18, 18, 8, 28, 25, 9, 13, 16, 17, 22, 21, 18, 20, 16, 0, 23, 23, 11, 21, 11, 12, 12,
         26,
         14, 29, 16, 14, 11, 13, 20, 20, 10, 9, 20, 26, 20, 20, 17, 17, 21, 16, 20, 21, 23, 8, 17, 17, 11],
        '芝', '中', '追')),
    ('ナリタトップロード', (
        [19, 20, 28, 11, 24, 25, 24, 21, 31, 21, 22, 23, 18, 20, 16, 17, 28, 14, 16, 12, 19, 30, 17, 24, 16, 18, 20, 24,
         13,
         19, 33, 11, 18, 26, 16, 33, 26, 24, 16, 20, 27, 11, 22, 25, 18, 35, 28, 28, 27, 18, 23, 0, 30, 18, 18, 5, 15,
         17,
         17, 24, 39, 24, 21, 18, 21, 20, 26, 9, 17, 18, 19, 20, 28, 23, 15, 28, 21, 34, 19, 30, 16, 21, 34, 18],
        '芝', '中長', '先')),
    ('ナリタブライアン', (
        [21, 27, 22, 10, 22, 26, 32, 29, 24, 21, 31, 19, 29, 19, 10, 24, 29, 21, 29, 12, 13, 35, 21, 22, 8, 32, 28, 18,
         5,
         27, 34, 18, 19, 37, 16, 28, 26, 18, 12, 26, 27, 18, 15, 21, 16, 31, 24, 19, 33, 24, 23, 30, 0, 12, 28, 2, 23,
         11,
         25, 29, 30, 19, 21, 12, 30, 28, 29, 16, 24, 27, 21, 23, 19, 17, 26, 28, 28, 29, 26, 24, 11, 15, 28, 11],
        '芝', '中長', '差')),
    ('ニシノフラワー', (
        [18, 12, 26, 21, 10, 8, 9, 23, 20, 9, 9, 23, 17, 10, 28, 20, 12, 22, 17, 11, 27, 9, 10, 24, 27, 7, 11, 17, 17,
         8,
         15, 29, 16, 9, 14, 16, 8, 14, 33, 10, 10, 31, 29, 28, 10, 17, 19, 17, 12, 9, 11, 18, 12, 0, 9, 13, 29, 26, 12,
         10,
         16, 19, 27, 17, 14, 9, 13, 24, 7, 9, 9, 30, 17, 15, 21, 10, 13, 18, 10, 18, 33, 23, 17, 17],
        '芝', '短マ', '先')),
    ('ネオユニヴァース', (
        [18, 30, 18, 9, 20, 17, 27, 24, 18, 26, 28, 15, 25, 21, 11, 23, 20, 18, 22, 10, 16, 21, 22, 20, 11, 18, 20, 16,
         3,
         23, 20, 16, 19, 30, 10, 22, 18, 21, 10, 22, 19, 18, 10, 18, 16, 22, 23, 20, 27, 25, 21, 18, 28, 9, 0, 3, 18,
         11,
         15, 19, 20, 20, 11, 12, 21, 31, 19, 10, 21, 29, 20, 22, 20, 17, 26, 19, 23, 21, 26, 22, 9, 15, 19, 13],
        '芝', '中', '差')),
    ('ハルウララ', (
        [1, 3, 21, 12, 20, 17, 3, 4, 3, 20, 4, 2, 13, 11, 21, 13, 3, 23, 11, 15, 3, 20, 3, 1, 18, 1, 4, 1, 10, 0, 1, 12,
         12,
         13, 23, 3, 11, 9, 17, 10, 17, 12, 4, 4, 5, 17, 3, 4, 15, 1, 11, 5, 2, 13, 3, 0, 12, 18, 9, 11, 3, 11, 2, 15, 6,
         12,
         11, 7, 2, 3, 8, 9, 17, 2, 9, 4, 4, 4, 1, 2, 10, 5, 9, 21],
        'ダ', '短', '追')),
    ('バンブーメモリー', (
        [17, 18, 23, 20, 12, 13, 20, 28, 13, 11, 21, 17, 29, 11, 19, 24, 12, 29, 24, 13, 20, 14, 12, 19, 18, 19, 18, 11,
         11,
         21, 10, 34, 13, 19, 17, 14, 9, 9, 28, 16, 14, 36, 24, 20, 10, 11, 12, 13, 19, 16, 12, 15, 23, 29, 18, 12, 0,
         20,
         11, 24, 13, 11, 21, 13, 22, 19, 11, 25, 15, 19, 10, 25, 11, 11, 24, 14, 19, 11, 17, 18, 28, 14, 11, 12],
        '芝', '短マ', '差')),
    ('ヒシアケボノ', (
        [9, 10, 19, 19, 11, 10, 12, 9, 16, 12, 11, 17, 13, 11, 27, 13, 11, 21, 11, 10, 18, 12, 11, 19, 26, 10, 12, 15,
         11,
         8, 15, 18, 10, 13, 8, 19, 11, 16, 25, 11, 10, 19, 19, 17, 11, 20, 17, 18, 13, 9, 12, 17, 11, 26, 11, 18, 20, 0,
         9,
         10, 19, 17, 19, 17, 12, 11, 13, 16, 9, 13, 9, 17, 20, 16, 7, 11, 11, 18, 9, 18, 24, 18, 15, 13],
        '芝', '短', '先')),
    ('ヒシアマゾン', (
        [20, 15, 17, 9, 26, 24, 20, 19, 20, 23, 21, 20, 18, 16, 10, 15, 16, 9, 20, 9, 10, 28, 17, 18, 10, 17, 9, 19, 6,
         19,
         20, 9, 26, 16, 12, 16, 18, 19, 13, 25, 22, 9, 11, 18, 18, 19, 15, 15, 16, 16, 26, 17, 25, 12, 15, 9, 11, 9, 0,
         11,
         20, 17, 18, 9, 9, 15, 18, 11, 11, 17, 24, 15, 17, 19, 21, 19, 10, 16, 19, 17, 10, 20, 18, 10],
        '芝', '中', '追')),
    ('ヒシミラクル', (
        [10, 18, 13, 12, 13, 21, 22, 19, 15, 13, 23, 10, 19, 13, 11, 17, 23, 19, 17, 6, 11, 26, 11, 9, 8, 26, 27, 11, 3,
         23,
         21, 17, 13, 27, 7, 21, 17, 12, 10, 16, 23, 17, 14, 11, 10, 22, 13, 15, 27, 17, 14, 24, 29, 10, 19, 11, 24, 10,
         11,
         0, 26, 12, 13, 4, 28, 20, 23, 9, 25, 20, 11, 11, 14, 10, 16, 24, 28, 22, 19, 17, 9, 8, 22, 5],
        '芝', '長', '差')),
    ('ビワハヤヒデ', (
        [19, 17, 25, 10, 24, 26, 30, 17, 29, 22, 24, 23, 20, 23, 18, 16, 32, 12, 16, 12, 20, 35, 19, 24, 17, 21, 23, 23,
         13,
         18, 36, 9, 19, 29, 13, 37, 26, 27, 16, 21, 28, 10, 20, 25, 17, 40, 28, 26, 27, 18, 29, 39, 30, 16, 20, 3, 13,
         19,
         20, 26, 0, 23, 20, 18, 20, 21, 32, 9, 19, 22, 21, 18, 29, 25, 15, 31, 22, 38, 21, 30, 15, 27, 35, 19],
        '芝', '中長', '先')),
    ('ファインモーション', (
        [14, 20, 26, 11, 17, 15, 16, 19, 27, 19, 17, 24, 18, 16, 17, 19, 17, 13, 16, 11, 18, 16, 22, 25, 16, 7, 12, 23,
         8,
         18, 22, 13, 22, 17, 11, 23, 14, 23, 21, 19, 17, 16, 18, 28, 14, 23, 24, 26, 16, 17, 16, 24, 19, 19, 20, 11, 11,
         17,
         17, 12, 23, 0, 19, 18, 11, 20, 16, 9, 10, 17, 15, 19, 23, 23, 23, 16, 13, 25, 14, 24, 17, 22, 25, 19],
        '芝', '中', '先')),
    ('フジキセキ', (
        [20, 14, 27, 10, 13, 9, 13, 20, 22, 11, 14, 26, 18, 11, 17, 17, 11, 13, 21, 12, 27, 14, 12, 27, 16, 14, 10, 17,
         20,
         11, 19, 19, 10, 11, 17, 18, 9, 16, 26, 13, 11, 20, 29, 25, 9, 20, 20, 18, 12, 10, 14, 21, 21, 27, 11, 2, 21,
         19,
         18, 13, 20, 19, 0, 18, 13, 11, 12, 22, 9, 13, 10, 21, 18, 16, 18, 12, 13, 19, 12, 22, 24, 22, 16, 18],
        '芝', 'マ', '先')),
    ('ホッコータルマエ', (
        [16, 10, 38, 2, 11, 20, 11, 20, 16, 13, 14, 27, 21, 11, 12, 20, 11, 6, 18, 41, 18, 16, 15, 24, 9, 5, 7, 19, 26,
         8,
         17, 12, 13, 14, 37, 20, 11, 18, 18, 13, 11, 10, 18, 26, 12, 20, 17, 18, 14, 11, 11, 18, 12, 17, 12, 15, 13, 17,
         9,
         4, 18, 18, 18, 0, 8, 13, 11, 11, 4, 12, 10, 17, 20, 16, 16, 12, 5, 18, 9, 18, 17, 24, 16, 42],
        'ダ', 'マ中', '先')),
    ('マチカネタンホイザ', (
        [10, 19, 15, 10, 12, 21, 19, 20, 12, 14, 21, 12, 20, 14, 9, 19, 21, 23, 19, 8, 12, 21, 13, 11, 11, 24, 27, 11,
         2,
         17, 19, 18, 13, 31, 6, 20, 20, 12, 11, 13, 21, 20, 14, 13, 14, 22, 15, 14, 35, 17, 13, 21, 30, 14, 21, 6, 22,
         12,
         9, 28, 20, 11, 13, 8, 0, 23, 19, 11, 23, 21, 13, 14, 14, 10, 18, 22, 28, 20, 18, 14, 12, 9, 23, 5],
        '芝', '長', '差')),
    ('マチカネフクキタル', (
        [17, 27, 19, 9, 20, 18, 26, 24, 18, 24, 28, 16, 25, 20, 10, 23, 20, 19, 23, 11, 15, 22, 27, 19, 11, 17, 21, 16,
         3,
         22, 18, 18, 19, 30, 11, 22, 19, 19, 15, 20, 19, 18, 10, 17, 17, 20, 19, 21, 27, 25, 20, 20, 28, 9, 31, 12, 19,
         11,
         15, 20, 21, 20, 11, 13, 23, 0, 20, 10, 20, 28, 19, 20, 19, 16, 29, 20, 27, 20, 25, 20, 9, 15, 22, 14],
        '芝', '中', '差')),
    ('マヤノトップガン', (
        [23, 17, 18, 17, 19, 27, 21, 18, 18, 21, 21, 16, 21, 28, 11, 16, 39, 11, 18, 19, 12, 32, 26, 15, 9, 20, 24, 16,
         2,
         18, 28, 9, 23, 28, 17, 29, 32, 20, 9, 19, 28, 9, 11, 18, 24, 32, 22, 19, 27, 16, 20, 26, 29, 13, 19, 11, 11,
         13,
         18, 23, 32, 16, 12, 11, 19, 20, 0, 15, 20, 23, 19, 24, 22, 18, 15, 37, 21, 30, 18, 19, 8, 17, 27, 12],
        '芝', '中長', '逃')),
    ('マルゼンスキー', (
        [26, 11, 20, 23, 10, 12, 10, 17, 11, 9, 9, 20, 19, 20, 14, 15, 17, 17, 21, 18, 16, 9, 20, 20, 16, 10, 9, 14, 9,
         9,
         15, 26, 10, 11, 20, 11, 16, 9, 27, 10, 13, 24, 17, 18, 15, 10, 9, 10, 8, 10, 10, 9, 16, 24, 10, 7, 25, 16, 11,
         9,
         9, 9, 22, 11, 11, 10, 15, 0, 9, 10, 14, 34, 8, 10, 18, 16, 10, 8, 8, 9, 25, 15, 10, 9],
        '芝', '短マ', '逃')),
    ('マンハッタンカフェ', (
        [11, 22, 11, 9, 11, 19, 17, 16, 7, 18, 19, 13, 18, 9, 12, 14, 19, 15, 18, 2, 12, 22, 14, 13, 13, 30, 27, 13, 5,
         18,
         24, 16, 8, 25, 3, 19, 19, 16, 15, 9, 16, 16, 8, 8, 11, 21, 10, 10, 24, 21, 9, 17, 24, 7, 21, 2, 15, 9, 11, 25,
         19,
         10, 9, 4, 23, 20, 20, 9, 0, 17, 10, 10, 12, 13, 19, 18, 27, 19, 19, 9, 10, 13, 23, 5],
        '芝', '長', '差')),
    ('マーベラスサンデー', (
        [16, 25, 23, 11, 18, 19, 27, 26, 19, 21, 27, 15, 26, 22, 13, 23, 20, 18, 23, 10, 13, 21, 21, 16, 9, 20, 20, 15,
         3,
         23, 18, 16, 20, 29, 10, 23, 17, 23, 8, 19, 21, 16, 11, 21, 19, 22, 23, 19, 30, 23, 20, 18, 27, 9, 29, 3, 19,
         13,
         17, 20, 22, 17, 13, 12, 21, 28, 23, 10, 17, 0, 18, 17, 22, 18, 24, 21, 21, 25, 26, 21, 11, 18, 17, 11],
        '芝', '中', '差')),
    ('ミスターシービー', (
        [19, 17, 18, 8, 25, 26, 20, 19, 19, 28, 21, 16, 20, 26, 9, 14, 20, 12, 16, 9, 13, 28, 17, 19, 10, 10, 13, 22, 5,
         17,
         26, 11, 24, 21, 10, 23, 21, 20, 9, 26, 28, 10, 12, 16, 18, 22, 21, 19, 20, 17, 26, 19, 21, 9, 20, 8, 10, 9, 24,
         11,
         21, 15, 10, 10, 13, 19, 19, 14, 10, 18, 0, 19, 19, 20, 17, 19, 14, 20, 20, 22, 10, 15, 19, 10],
        '芝', '中', '追')),
    ('ミホノブルボン', (
        [37, 23, 26, 24, 20, 16, 19, 27, 18, 21, 19, 23, 24, 26, 16, 24, 26, 20, 25, 25, 22, 19, 28, 31, 22, 8, 11, 17,
         9,
         16, 19, 25, 16, 19, 28, 17, 25, 16, 25, 19, 18, 28, 20, 24, 24, 19, 23, 20, 19, 20, 20, 20, 23, 30, 22, 9, 25,
         17,
         15, 11, 18, 19, 21, 17, 14, 20, 24, 34, 10, 17, 19, 0, 17, 15, 25, 25, 15, 19, 18, 21, 24, 21, 23, 19],
        '芝', '短マ中', '逃')),
    ('メイショウドトウ', (
        [16, 19, 26, 10, 22, 18, 20, 17, 25, 24, 21, 25, 21, 22, 18, 18, 20, 13, 18, 13, 19, 22, 20, 22, 17, 10, 13, 23,
         9,
         16, 25, 9, 19, 23, 10, 27, 20, 27, 17, 18, 20, 10, 18, 24, 17, 35, 26, 26, 22, 16, 20, 28, 19, 17, 20, 17, 11,
         20,
         17, 14, 29, 23, 18, 20, 14, 19, 22, 8, 12, 22, 19, 17, 0, 25, 15, 23, 13, 28, 18, 26, 15, 24, 26, 19],
        '芝', '中', '先')),
    ('メジロアルダン', (
        [18, 16, 23, 8, 18, 23, 18, 15, 22, 18, 18, 25, 25, 20, 16, 14, 17, 11, 17, 9, 17, 18, 17, 29, 19, 12, 12, 27,
         11,
         18, 28, 9, 16, 18, 8, 30, 20, 28, 19, 16, 21, 10, 17, 22, 20, 25, 23, 23, 18, 17, 17, 23, 17, 15, 17, 2, 11,
         16,
         19, 10, 25, 23, 16, 16, 10, 16, 18, 10, 13, 18, 20, 15, 25, 0, 18, 21, 12, 28, 20, 26, 17, 27, 27, 17],
        '芝', '中', '先')),
    ('メジロドーベル', (
        [24, 26, 25, 9, 16, 19, 21, 34, 20, 18, 22, 26, 30, 16, 8, 33, 16, 17, 34, 16, 19, 15, 23, 28, 12, 17, 15, 18,
         11,
         24, 18, 26, 20, 25, 16, 16, 18, 18, 27, 16, 17, 27, 16, 28, 16, 15, 16, 18, 22, 26, 17, 15, 26, 21, 26, 9, 24,
         7,
         21, 16, 15, 23, 18, 16, 18, 29, 15, 18, 19, 24, 17, 25, 15, 18, 0, 18, 26, 17, 26, 16, 19, 26, 21, 17],
        '芝', 'マ中', '差')),
    ('メジロパーマー', (
        [29, 17, 19, 17, 21, 27, 23, 18, 20, 20, 24, 16, 21, 31, 12, 16, 35, 11, 17, 19, 13, 33, 28, 16, 11, 20, 21, 17,
         5,
         19, 26, 9, 20, 27, 20, 28, 31, 20, 9, 20, 27, 12, 21, 18, 28, 31, 21, 20, 30, 16, 21, 28, 28, 10, 19, 4, 14,
         11,
         19, 24, 31, 16, 12, 12, 22, 20, 37, 16, 18, 21, 19, 25, 23, 21, 18, 0, 24, 32, 27, 22, 9, 17, 27, 13],
        '芝', '中長', '逃')),
    ('メジロブライト', (
        [12, 23, 13, 9, 15, 19, 20, 20, 13, 17, 22, 9, 20, 16, 10, 16, 21, 21, 17, 4, 17, 23, 18, 12, 13, 25, 28, 9, 4,
         16,
         19, 19, 12, 31, 5, 21, 21, 13, 15, 12, 20, 20, 12, 10, 12, 22, 14, 15, 29, 19, 16, 21, 28, 13, 23, 4, 19, 11,
         10,
         28, 22, 13, 13, 5, 28, 27, 21, 10, 27, 21, 14, 15, 13, 12, 26, 24, 0, 24, 22, 14, 8, 9, 23, 7],
        '芝', '長', '差')),
    ('メジロマックイーン', (
        [19, 19, 27, 14, 19, 26, 22, 24, 28, 22, 20, 22, 21, 23, 19, 17, 30, 15, 16, 11, 20, 37, 24, 22, 18, 18, 26, 23,
         10,
         16, 33, 10, 19, 33, 12, 37, 26, 28, 16, 18, 29, 14, 21, 32, 24, 36, 36, 27, 29, 18, 20, 34, 29, 18, 21, 4, 11,
         18,
         16, 22, 38, 25, 19, 18, 20, 20, 30, 8, 19, 25, 20, 19, 28, 28, 17, 32, 24, 0, 23, 28, 18, 24, 37, 18],
        '芝', '中長', '先')),
    ('メジロライアン', (
        [29, 24, 15, 7, 20, 19, 26, 22, 18, 19, 27, 17, 25, 21, 8, 21, 17, 17, 25, 8, 12, 21, 18, 18, 14, 20, 18, 17, 7,
         26,
         19, 15, 16, 26, 11, 17, 21, 21, 11, 19, 17, 18, 15, 14, 20, 19, 19, 16, 26, 27, 21, 19, 26, 10, 26, 1, 17, 9,
         19,
         19, 21, 14, 12, 9, 18, 25, 18, 8, 19, 26, 20, 18, 18, 20, 26, 27, 22, 23, 0, 21, 11, 18, 21, 9],
        '芝', '中', '差')),
    ('ヤエノムテキ', (
        [19, 21, 28, 11, 21, 19, 22, 20, 32, 22, 24, 24, 21, 23, 16, 17, 24, 14, 16, 12, 21, 24, 18, 27, 17, 12, 14, 23,
         11,
         22, 27, 12, 18, 22, 15, 30, 20, 27, 17, 22, 23, 12, 22, 27, 17, 29, 31, 29, 20, 19, 23, 30, 24, 18, 22, 2, 18,
         18,
         17, 17, 30, 24, 22, 18, 14, 20, 19, 9, 9, 21, 22, 21, 26, 26, 16, 22, 14, 28, 21, 0, 17, 22, 27, 17],
        '芝', '中', '先')),
    ('ヤマニンゼファー', (
        [18, 9, 29, 19, 8, 12, 8, 20, 16, 8, 9, 26, 17, 8, 27, 16, 10, 20, 19, 10, 22, 8, 10, 26, 27, 11, 8, 20, 18, 12,
         18,
         25, 9, 10, 12, 18, 11, 20, 36, 10, 11, 29, 29, 26, 15, 16, 20, 17, 10, 11, 8, 16, 11, 33, 9, 10, 28, 24, 10, 9,
         15,
         17, 24, 17, 12, 9, 8, 25, 10, 11, 10, 24, 15, 17, 19, 9, 8, 18, 11, 17, 0, 27, 19, 16],
        '芝', '短マ', '先')),
    ('ユキノビジン', (
        [24, 15, 32, 12, 16, 18, 19, 25, 24, 15, 16, 31, 25, 15, 22, 23, 16, 7, 23, 17, 23, 16, 15, 31, 18, 11, 8, 24,
         20,
         16, 24, 15, 17, 15, 16, 23, 17, 27, 24, 15, 15, 15, 22, 32, 22, 24, 23, 22, 17, 16, 17, 21, 15, 23, 15, 5, 14,
         18,
         20, 8, 27, 22, 22, 24, 9, 15, 17, 15, 13, 18, 15, 21, 24, 27, 26, 17, 9, 24, 18, 22, 27, 0, 24, 25],
        '芝', 'マ中', '先')),
    ('ライスシャワー', (
        [19, 18, 25, 10, 17, 29, 20, 17, 24, 21, 20, 26, 19, 18, 16, 15, 29, 11, 18, 11, 20, 31, 19, 31, 23, 20, 19, 27,
         11,
         19, 39, 8, 16, 28, 10, 34, 27, 30, 21, 16, 26, 11, 18, 23, 20, 35, 28, 28, 27, 21, 17, 34, 28, 17, 19, 9, 11,
         15,
         18, 22, 35, 25, 16, 16, 23, 22, 27, 10, 23, 17, 19, 23, 26, 27, 21, 27, 23, 37, 21, 27, 19, 24, 0, 19],
        '芝', '中長', '先')),
    ('ワンダーアキュート', (
        [16, 12, 35, 3, 12, 18, 12, 18, 16, 13, 14, 24, 22, 11, 12, 16, 11, 4, 16, 35, 22, 13, 14, 25, 11, 2, 4, 18, 26,
         8,
         16, 10, 12, 11, 32, 18, 9, 17, 19, 12, 10, 14, 18, 24, 12, 19, 17, 24, 12, 14, 11, 18, 11, 17, 13, 21, 12, 13,
         10,
         5, 19, 19, 18, 42, 5, 14, 12, 9, 5, 11, 10, 19, 19, 17, 17, 13, 7, 18, 9, 17, 16, 25, 19, 0],
        'ダ', 'マ中', '先')),
])

additional_uma_info_dict = {

}


class Edge(object):
    def __init__(self, a, b):
        self.a = a
        self.b = b

    def __eq__(self, other):
        return self.a == other.a and self.b == other.b or self.b == other.a and self.a == other.b

    def __hash__(self):
        return hash(self.a) + hash(self.b)

    def __str__(self):
        return f'{self.a} + {self.b}'

    def __repr__(self):
        return self.__str__()

    def get_score(self, uma_info):
        return uma_info[self.a]['comps'][self.b]


def resolve_uma_info_dict():
    res = {}
    uma_name2id_map = {uma_name: i for i, uma_name in enumerate(uma_info_dict.keys())}
    uma_id2name_map = {v: k for k, v in uma_name2id_map.items()}
    for uma_name, uma_info in uma_info_dict.items():
        resolved_uma_info = {}
        comps = uma_info[0]
        resolved_uma_info['avg_comp'] = sum(comps) / len(comps)
        resolved_uma_info['10st_comp'] = sorted(comps, reverse=True)[10]
        resolved_uma_info['comps'] = {}
        for i, comp in enumerate(comps):
            resolved_uma_info['comps'][uma_id2name_map[i]] = comp
            resolved_uma_info['field_comp'] = set(uma_info[1])
            resolved_uma_info['dist_comp'] = set(uma_info[2])
            resolved_uma_info['position_comp'] = set(uma_info[3])
        res[uma_name] = resolved_uma_info
    return res


def check_uma_info_dict(dict_to_check):
    for combination in itertools.combinations(dict_to_check.keys(), 2):
        assert dict_to_check[combination[0]]['comps'][combination[1]] == dict_to_check[combination[1]]['comps'][combination[0]],\
            f'{combination[0]} vs {combination[1]} not equal, {dict_to_check[combination[0]]["comps"][combination[1]]} vs {dict_to_check[combination[1]]["comps"][combination[0]]}'


def calculate_comp_score(uma_list, uma_info):
    assert(len(uma_list) == 7)
    score = uma_info[uma_list[0]]['comps'][uma_list[1]] + uma_info[uma_list[0]]['comps'][uma_list[2]]
    score += uma_info[uma_list[1]]['comps'][uma_list[2]]
    score += min(uma_info[uma_list[0]]['comps'][uma_list[1]],
                 uma_info[uma_list[0]]['comps'][uma_list[3]],
                 uma_info[uma_list[1]]['comps'][uma_list[3]])
    score += min(uma_info[uma_list[0]]['comps'][uma_list[1]],
                 uma_info[uma_list[0]]['comps'][uma_list[4]],
                 uma_info[uma_list[1]]['comps'][uma_list[4]])
    score += min(uma_info[uma_list[0]]['comps'][uma_list[2]],
                 uma_info[uma_list[0]]['comps'][uma_list[5]],
                 uma_info[uma_list[2]]['comps'][uma_list[5]])
    score += min(uma_info[uma_list[0]]['comps'][uma_list[2]],
                 uma_info[uma_list[0]]['comps'][uma_list[6]],
                 uma_info[uma_list[2]]['comps'][uma_list[6]])
    return score


def find_best_parent(uma_name, uma_info, available_uma_list, with_distance_constraint=True):
    def _check_distance_constraint(uma, distance_comp):
        if set(uma_info[uma]['dist_comp']).intersection(set(distance_comp)):
            return True
        else:
            return False

    def _select(pick, best_score, best_pick, candidates):
        if len(pick) == 7:
            score = calculate_comp_score(pick, uma_info)
            if score > best_score:
                best_score = score
                best_pick.clear()
                for uma in pick:
                    best_pick.append(uma)
            return best_score
        for combination in itertools.combinations(candidates, 2):
            if len(pick) == 3:
                if combination[0] == pick[1] or combination[1] == pick[1]:
                    continue
            elif len(pick) == 5:
                if combination[0] == pick[2] or combination[1] == pick[2]:
                    continue
            pick.append(combination[0])
            pick.append(combination[1])
            best_score = _select(pick, best_score, best_pick, candidates)
            pick.pop()
            pick.pop()

        return best_score

    pick = [uma_name]
    available_uma_set = set(available_uma_list)
    available_uma_set.remove(uma_name)
    distance_comp_set = set(resolved_uma_info_dict[uma_name]['dist_comp'])
    if with_distance_constraint:
        available_uma_set_copy = available_uma_set.copy()
        for candidate in available_uma_set_copy:
            if not (_check_distance_constraint(candidate, distance_comp_set)):
                available_uma_set.remove(candidate)
    best_pick = []
    best_score = _select(pick, 0, best_pick, available_uma_set)
    return best_score, best_pick


def find_5loop(include, uma_info, distance_constraints=None, available_uma_list=None, prune=True):
    def _calc_5loop_score(five_list):
        assert len(five_list) == 5
        res = 0
        for i in range(5):
            for j in range(i + 1, 5):
                comp = uma_info[five_list[i]]['comps'][five_list[j]]
                # prune, not 100% correct, no problem in most cases
                if prune:
                    if comp < uma_info[five_list[i]]['avg_comp'] or \
                            comp < uma_info[five_list[j]]['avg_comp']:
                        return 0
                res += comp
        return res

    if include is None:
        include = []
    include_set = set(include)
    assert len(include) <= 5
    best_pick = None
    best_score = 0
    if available_uma_list:
        candidate_uma_name_set = set(available_uma_list).difference(include_set)
    else:
        candidate_uma_name_set = set(uma_info.keys()).difference(include_set)
    for combination in itertools.combinations(candidate_uma_name_set, 5 - len(include_set)):
        for choice in combination:
            if distance_constraints and not distance_constraints.intersection(
                    resolved_uma_info_dict[choice]['dist_comp']):
                continue
        pick = include + list(combination)
        score = _calc_5loop_score(pick)
        if score > best_score:
            best_score = score
            best_pick = pick
    return best_score, best_pick


def solve_5loop(five_list, uma_info, priority_list=None):
    def _calculate_score_for_pick(pick, priorities):
        score = 0
        for uma, parents in pick.items():
            if uma in priorities:
                sequence = [uma, parents.a, parents.b, pick[parents.a].a, pick[parents.a].b, pick[parents.b].a, pick[parents.b].b]
                score = calculate_comp_score(sequence, uma_info)
        return score

    def _select(pick, best_score, best_pick, edges, taboo, five, priorities):
        if not five:
            score = _calculate_score_for_pick(pick, priorities)
            if score > best_score:
                best_score = score
                for uma, edge in pick.items():
                    best_pick[uma] = edge
            return best_score, best_pick
        selected_uma_name = five.pop()
        for e in edges:
            if e.a in taboo.get(selected_uma_name, set()) or e.b in taboo.get(selected_uma_name, set()):
                continue
            if e.a == selected_uma_name or e.b == selected_uma_name:
                continue
            pick[selected_uma_name] = e
            edges.remove(e)
            taboo.setdefault(e.a, set()).add(selected_uma_name)
            taboo.setdefault(e.b, set()).add(selected_uma_name)
            best_score, best_pick = _select(pick, best_score, best_pick, edges, taboo, five, priorities)
            taboo[e.b].remove(selected_uma_name)
            taboo[e.a].remove(selected_uma_name)
            edges.add(e)
            pick.pop(selected_uma_name)
        five.append(selected_uma_name)
        return best_score, best_pick

    edge_set = set()
    for combination in itertools.combinations(five_list, 2):
        edge = Edge(combination[0], combination[1])
        edge_set.add(edge)
    res = _select({}, 0, {}, edge_set, {}, five_list, priority_list)
    return res


def main(uma_info):
    include = ['スーパークリーク', 'オグリキャップ']
    available_uma_list = [
        'ダイワスカーレット',
        'オグリキャップ',
        'ウオッカ',
        'マヤノトップガン',
        'ハルウララ',
        'スペシャルウィーク',
        'ゴールドシップ',
        'アグネスタキオン',
        'ウイニングチケット',
        'サクラバクシンオー',
        'マチカネフクキタル',
        'ナイスネイチャ',
        'キングヘイロー',
        'エルコンドルパサー',
        'メジロライアン',
        'スーパークリーク',
        'グラスワンダー'
    ]
    # best parent
    res = find_best_parent('オグリキャップ', uma_info, available_uma_list=available_uma_list)
    print(res)

    # 5loop
    if not include:
        res = find_5loop(include, uma_info, available_uma_list=available_uma_list, prune=True)
    else:
        res = find_5loop(include, uma_info, available_uma_list=available_uma_list, prune=False)
    print(res)
    res = solve_5loop(res[1], uma_info, priority_list=include)
    print(res)


def main_interactive(uma_info):
    while True:
        print('Input command:')
        print('Available commands: best_parent, 5loop, exit, print_all_uma_names')
        command = input()
        all_uma_names = set(uma_info.keys())
        if command == 'exit':
            return
        elif command == 'print_all_uma_names':
            for uma_name in all_uma_names:
                print(uma_name)
        elif command == 'best_parent':
            print('Input uma name:')
            uma_name = input()
            if uma_name not in all_uma_names:
                print(f'Uma name {uma_name} not found')
                continue
            print('Input available uma list, separated by space, press enter with empty input to make all uma available:')
            available_uma_list = input().split()
            for available_uma_name in available_uma_list:
                if available_uma_name not in all_uma_names:
                    print(f'Uma name {available_uma_name} not found')
                    continue
            if not available_uma_list:
                available_uma_list = all_uma_names
            res = find_best_parent(uma_name, uma_info, available_uma_list=available_uma_list)
            print(f'Score: {res[0]}')
            pick = res[1]
            print(f'Result: {pick[0]} = {pick[1]} + {pick[2]}; {pick[1]} = {pick[3]} + {pick[4]}; {pick[2]} = {pick[5]} + {pick[6]}')
        elif command == '5loop':
            print('Input include uma list, separated by space, press enter with empty input to make all uma available:')
            include = input().split()
            for uma_name in include:
                if uma_name not in all_uma_names:
                    print(f'Uma name {uma_name} not found')
                    continue
            print('Input available uma list, separated by space, press enter with empty input to make all uma available:')
            available_uma_list = input().split()
            for available_uma_name in available_uma_list:
                if available_uma_name not in all_uma_names:
                    print(f'Uma name {available_uma_name} not found')
                    continue
            if not available_uma_list:
                available_uma_list = all_uma_names
            if not include:
                res = find_5loop(include, uma_info, available_uma_list=available_uma_list, prune=True)
            else:
                res = find_5loop(include, uma_info, available_uma_list=available_uma_list, prune=False)
            print('Input priority list, separated by space, press enter with empty input to ignore priorities:')
            priority_list = input().split()
            if not priority_list:
                print(f'Result: {",".join(res[1])}')
            else:
                five_list = res[1]
                res = solve_5loop(res[1], uma_info, priority_list=priority_list)
                print(f'Result:')
                for uma_name in five_list:
                    print(f'{uma_name} = {res[1][uma_name].a} + {res[1][uma_name].b}')
        else:
            print(f'Unknown command: {command}')


# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    resolved_uma_info_dict = resolve_uma_info_dict()
    # check_uma_info_dict(resolved_uma_info_dict)
    main_interactive(resolved_uma_info_dict)
    # main(resolved_uma_info_dict)

